{% assign products = array %}

{% if event.preview %}
  {% assign product = '{"title": "A Shoe", "variants": [{"inventory_quantity": 5}], "admin_graphql_api_id": "gid://shopify/Product/1234567890"}' | parse_json %}
  {% assign products[products.size] = product %}
{% elsif event.topic contains "shopify/products/" %}
  {% assign products[products.size] = product %}
{% elsif event.topic contains "shopify/inventory_levels/" %}
  {% assign products[products.size] = inventory_level.variant.product %}
{% elsif event.topic == "mechanic/user/trigger" %}
  {% assign products = shop.products %}
{% endif %}

{% for product in products %}
  {% assign product_inventory = product.variants | map: "inventory_quantity" | sum %}

  {% assign product_tags = product.tags | split: ", " %}

  {% if event.preview or product_inventory <= options.out_of_stock_inventory_level__number_required %}
    {% unless event.preview != true and product_tags contains options.product_tag__required %}
      {% action "shopify" %}
        mutation {
          tagsAdd(
            id: {{ product.admin_graphql_api_id | json }}
            tags: {{ options.product_tag__required | json }}
          ) {
            userErrors {
              field
              message
            }
          }
        }
      {% endaction %}

      {% if event.topic != "mechanic/user/trigger" and options.email_alert_recipient__email != blank %}
        {% capture email_body %}
          Hello,

          {{ product.title }} is now out of stock, with a total stock level of {{ product_inventory }} (across all variants and locations).

          <a href="https://{{ shop.domain }}/admin/products/{{ product.id }}">Manage this product</a>

          Thanks,
          Mechanic (for {{ shop.name }})
        {% endcapture %}

        {% action "email" %}
          {
            "to": {{ options.email_alert_recipient__email | json }},
            "subject": {{ product.title | append: " is now out of stock (" | append: product_inventory | append: ")" | json }},
            "body": {{ email_body | unindent | strip | newline_to_br | json }},
            "reply_to": {{ shop.customer_email | json }},
            "from_display_name": {{ shop.name | json }}
          }
        {% endaction %}
      {% endif %}
    {% endunless %}
  {% else %}
    {% if product_tags contains options.product_tag__required %}
      {% action "shopify" %}
        mutation {
          tagsRemove(
            id: {{ product.admin_graphql_api_id | json }}
            tags: {{ options.product_tag__required | json }}
          ) {
            userErrors {
              field
              message
            }
          }
        }
      {% endaction %}
    {% endif %}
  {% endif %}
{% endfor %}
